/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/address": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AddressDtoICollectionResponseModel"];
            "application/json": components["schemas"]["AddressDtoICollectionResponseModel"];
            "text/json": components["schemas"]["AddressDtoICollectionResponseModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddAddressDto"];
          "text/json": components["schemas"]["AddAddressDto"];
          "application/*+json": components["schemas"]["AddAddressDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/cart": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CartDtoICollectionResponseModel"];
            "application/json": components["schemas"]["CartDtoICollectionResponseModel"];
            "text/json": components["schemas"]["CartDtoICollectionResponseModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddCartProductDto"];
          "text/json": components["schemas"]["AddCartProductDto"];
          "application/*+json": components["schemas"]["AddCartProductDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/order": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GuidOrderDtoListIDictionaryResponseModel"];
            "application/json": components["schemas"]["GuidOrderDtoListIDictionaryResponseModel"];
            "text/json": components["schemas"]["GuidOrderDtoListIDictionaryResponseModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddOrderDto"];
          "text/json": components["schemas"]["AddOrderDto"];
          "application/*+json": components["schemas"]["AddOrderDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/profile": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AccountDtoResponseModel"];
            "application/json": components["schemas"]["AccountDtoResponseModel"];
            "text/json": components["schemas"]["AccountDtoResponseModel"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateAccountDto"];
          "text/json": components["schemas"]["UpdateAccountDto"];
          "application/*+json": components["schemas"]["UpdateAccountDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/account": {
    get: {
      parameters: {
        query: {
          SearchKey?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AccountDtoICollectionResponseModel"];
            "application/json": components["schemas"]["AccountDtoICollectionResponseModel"];
            "text/json": components["schemas"]["AccountDtoICollectionResponseModel"];
          };
        };
      };
    };
  };
  "/api/order/{orderTag}": {
    get: {
      parameters: {
        path: {
          orderTag: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["OrderDtoICollectionResponseModel"];
            "application/json": components["schemas"]["OrderDtoICollectionResponseModel"];
            "text/json": components["schemas"]["OrderDtoICollectionResponseModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          orderTag: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateOrderStatusDto"];
          "text/json": components["schemas"]["UpdateOrderStatusDto"];
          "application/*+json": components["schemas"]["UpdateOrderStatusDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/account/{accountId}": {
    delete: {
      parameters: {
        path: {
          accountId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/address/{addressId}": {
    delete: {
      parameters: {
        path: {
          addressId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/avatar": {
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            Avatar?: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/cart/{cartId}": {
    put: {
      parameters: {
        path: {
          cartId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCartProductQuantityDto"];
          "text/json": components["schemas"]["UpdateCartProductQuantityDto"];
          "application/*+json": components["schemas"]["UpdateCartProductQuantityDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/login": {
    /** User login with credential */
    post: {
      /** @description Email, Password */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginInput"];
          "text/json": components["schemas"]["LoginInput"];
          "application/*+json": components["schemas"]["LoginInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringResponseModel"];
            "application/json": components["schemas"]["StringResponseModel"];
            "text/json": components["schemas"]["StringResponseModel"];
          };
        };
      };
    };
  };
  "/api/register/{role}": {
    /** User register new account with credential */
    post: {
      parameters: {
        path: {
          /** @description Role */
          role: components["schemas"]["AccountRole"];
        };
      };
      /** @description Email, Password */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegisterInput"];
          "text/json": components["schemas"]["RegisterInput"];
          "application/*+json": components["schemas"]["RegisterInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/checkToken": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
  };
  "/api/brand": {
    get: {
      parameters: {
        query: {
          input?: components["schemas"]["FilterBrandDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BrandDtoICollectionResponseModel"];
            "application/json": components["schemas"]["BrandDtoICollectionResponseModel"];
            "text/json": components["schemas"]["BrandDtoICollectionResponseModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddBrandDto"];
          "text/json": components["schemas"]["AddBrandDto"];
          "application/*+json": components["schemas"]["AddBrandDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/brand/{brandId}/product": {
    post: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddProductDto"];
          "text/json": components["schemas"]["AddProductDto"];
          "application/*+json": components["schemas"]["AddProductDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/color": {
    post: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddProductColorsDto"];
          "text/json": components["schemas"]["AddProductColorsDto"];
          "application/*+json": components["schemas"]["AddProductColorsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/image": {
    post: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: uuid */
            ProductId?: string;
            Images?: (string)[];
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/quantity": {
    put: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateProductQuantityDto"];
          "text/json": components["schemas"]["UpdateProductQuantityDto"];
          "application/*+json": components["schemas"]["UpdateProductQuantityDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddProductQuantityDto"];
          "text/json": components["schemas"]["AddProductQuantityDto"];
          "application/*+json": components["schemas"]["AddProductQuantityDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/size": {
    post: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddProductSizesDto"];
          "text/json": components["schemas"]["AddProductSizesDto"];
          "application/*+json": components["schemas"]["AddProductSizesDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}": {
    get: {
      parameters: {
        path: {
          productId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDtoResponseModel"];
            "application/json": components["schemas"]["ProductDtoResponseModel"];
            "text/json": components["schemas"]["ProductDtoResponseModel"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          productId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateProductDto"];
          "text/json": components["schemas"]["UpdateProductDto"];
          "application/*+json": components["schemas"]["UpdateProductDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          productId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product": {
    get: {
      parameters: {
        query: {
          input?: components["schemas"]["FilterProductDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProductDtoICollectionResponseModel"];
            "application/json": components["schemas"]["ProductDtoICollectionResponseModel"];
            "text/json": components["schemas"]["ProductDtoICollectionResponseModel"];
          };
        };
      };
    };
  };
  "/api/brand/{brandId}": {
    put: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateBrandDto"];
          "text/json": components["schemas"]["UpdateBrandDto"];
          "application/*+json": components["schemas"]["UpdateBrandDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/color/{colorId}": {
    delete: {
      parameters: {
        path: {
          productId: string;
          colorId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/image/{imageId}": {
    delete: {
      parameters: {
        path: {
          productId: string;
          imageId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/product/{productId}/size/{sizeId}": {
    delete: {
      parameters: {
        path: {
          productId: string;
          sizeId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
  "/api/brand/{brandId}/logo": {
    put: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            input?: components["schemas"]["UpdateBrandLogoDto"];
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BooleanResponseModel"];
            "application/json": components["schemas"]["BooleanResponseModel"];
            "text/json": components["schemas"]["BooleanResponseModel"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AccountDto: {
      /** Format: uuid */
      id?: string;
      email?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      phone?: string | null;
      role?: components["schemas"]["AccountRole"];
      status?: components["schemas"]["AccountStatus"];
      avatar?: components["schemas"]["FileSimplifiedStringValueTuple"];
    };
    AccountDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["AccountDto"])[] | null;
      success?: boolean;
    };
    AccountDtoResponseModel: {
      errorCode?: string | null;
      data?: components["schemas"]["AccountDto"];
      success?: boolean;
    };
    /** @enum {string} */
    AccountRole: "Shop" | "Customer";
    AccountSimplified: {
      /** Format: uuid */
      id?: string;
      email?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      phone?: string | null;
      role?: components["schemas"]["AccountRole"];
      status?: components["schemas"]["AccountStatus"];
    };
    /** @enum {string} */
    AccountStatus: "Activated" | "Deactivated";
    AddAddressDto: {
      addressName?: string | null;
      city?: string | null;
      district?: string | null;
      ward?: string | null;
      street?: string | null;
      isPrimary?: boolean;
    };
    AddBrandDto: {
      brandName?: string | null;
    };
    AddCartProductDto: {
      /** Format: uuid */
      productInStockId?: string;
      /** Format: int32 */
      quantity?: number;
    };
    AddOrderDto: {
      /** Format: uuid */
      shippingAddressId?: string;
      cartIds?: (string)[] | null;
    };
    AddProductColorsDto: {
      colorNames?: (string)[] | null;
    };
    AddProductDto: {
      productName?: string | null;
      /** Format: double */
      price?: number;
      description?: string | null;
    };
    AddProductQuantityDto: {
      /** Format: uuid */
      colorId?: string;
      /** Format: uuid */
      sizeId?: string;
      /** Format: int32 */
      quantity?: number;
    };
    AddProductSizesDto: {
      sizeNames?: (string)[] | null;
    };
    AddressDto: {
      /** Format: uuid */
      id?: string;
      addressName?: string | null;
      city?: string | null;
      district?: string | null;
      ward?: string | null;
      street?: string | null;
      isPrimary?: boolean;
      account?: components["schemas"]["AccountSimplified"];
    };
    AddressDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["AddressDto"])[] | null;
      success?: boolean;
    };
    AddressSimplified: {
      /** Format: uuid */
      id?: string;
      addressName?: string | null;
      city?: string | null;
      district?: string | null;
      ward?: string | null;
      street?: string | null;
      isPrimary?: boolean;
    };
    BooleanResponseModel: {
      errorCode?: string | null;
      data?: boolean;
      success?: boolean;
    };
    BrandDto: {
      /** Format: uuid */
      id?: string;
      brandName?: string | null;
      logo?: components["schemas"]["FileSimplifiedStringValueTuple"];
    };
    BrandDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["BrandDto"])[] | null;
      success?: boolean;
    };
    BrandSimplified: {
      /** Format: uuid */
      id?: string;
      brandName?: string | null;
    };
    CartDto: {
      /** Format: uuid */
      id?: string;
      /** Format: int32 */
      quantity?: number;
      product?: components["schemas"]["ProductSimplified"];
      color?: components["schemas"]["ColorSimplified"];
      size?: components["schemas"]["SizeSimplified"];
    };
    CartDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["CartDto"])[] | null;
      success?: boolean;
    };
    ColorSimplified: {
      /** Format: uuid */
      id?: string;
      colorName?: string | null;
    };
    FileSimplifiedStringValueTuple: Record<string, never>;
    FilterBrandDto: Record<string, never>;
    FilterProductDto: Record<string, never>;
    GuidGuidInt32ValueTuple: Record<string, never>;
    GuidOrderDtoListIDictionaryResponseModel: {
      errorCode?: string | null;
      data?: ({
        [key: string]: (components["schemas"]["OrderDto"])[] | undefined;
      }) | null;
      success?: boolean;
    };
    LoginInput: {
      /** Format: email */
      email: string;
      password: string;
    };
    OrderDto: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tag?: string;
      /** Format: int32 */
      quantity?: number;
      /** Format: date-time */
      date?: string;
      status?: components["schemas"]["OrderStatus"];
      product?: components["schemas"]["ProductSimplified"];
      color?: components["schemas"]["ColorSimplified"];
      size?: components["schemas"]["SizeSimplified"];
      address?: components["schemas"]["AddressSimplified"];
    };
    OrderDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["OrderDto"])[] | null;
      success?: boolean;
    };
    /** @enum {string} */
    OrderStatus: "Created" | "Paid" | "Shipped";
    ProductDto: {
      /** Format: uuid */
      id?: string;
      productName?: string | null;
      /** Format: double */
      price?: number;
      description?: string | null;
      images?: (components["schemas"]["FileSimplifiedStringValueTuple"])[] | null;
      brand?: components["schemas"]["BrandSimplified"];
      colors?: (components["schemas"]["ColorSimplified"])[] | null;
      sizes?: (components["schemas"]["SizeSimplified"])[] | null;
      inStocks?: ({
        [key: string]: components["schemas"]["GuidGuidInt32ValueTuple"] | undefined;
      }) | null;
    };
    ProductDtoICollectionResponseModel: {
      errorCode?: string | null;
      data?: (components["schemas"]["ProductDto"])[] | null;
      success?: boolean;
    };
    ProductDtoResponseModel: {
      errorCode?: string | null;
      data?: components["schemas"]["ProductDto"];
      success?: boolean;
    };
    ProductSimplified: {
      /** Format: uuid */
      id?: string;
      productName?: string | null;
      /** Format: double */
      price?: number;
      description?: string | null;
    };
    RegisterInput: {
      /** Format: email */
      email: string;
      password: string;
      firstName: string;
      lastName: string;
      /** Format: tel */
      phone: string;
    };
    SizeSimplified: {
      /** Format: uuid */
      id?: string;
      sizeName?: string | null;
    };
    StringResponseModel: {
      errorCode?: string | null;
      data?: string | null;
      success?: boolean;
    };
    UpdateAccountDto: {
      /** Format: email */
      email?: string | null;
      firstName?: string | null;
      lastName?: string | null;
      /** Format: tel */
      phone?: string | null;
    };
    UpdateBrandDto: Record<string, never>;
    UpdateBrandLogoDto: Record<string, never>;
    UpdateCartProductQuantityDto: {
      /** Format: uuid */
      cartProductId?: string;
      /** Format: int32 */
      quantity?: number;
    };
    UpdateOrderStatusDto: {
      /** Format: uuid */
      tag?: string;
      status?: components["schemas"]["OrderStatus"];
    };
    UpdateProductDto: {
      productName?: string | null;
      /** Format: double */
      price?: number;
      description?: string | null;
    };
    UpdateProductQuantityDto: {
      /** Format: uuid */
      productInStockId?: string;
      /** Format: uuid */
      sizeId?: string;
      /** Format: uuid */
      colorId?: string;
      /** Format: int32 */
      quantity?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
